We decided on a Minecraft based web-service. We decided to do such a project because it was something that was not done before and it was also an interesting project to create. The entire project was built and runs in Ruby. Ruby is a popular web language that is both easy to code in and has many useful tools for web serivces. 

The first part of Minecraft Mirco-transaction Service consists of the Item Selection service. In this serivce, a user submits their Username as well as the item they want and the amount they want. The input is 3 arguemnts. Two of them are string which is the Username and Item, the other is an interger which is used for the amount. Once taken in will be compared to a list of predetermined items that out sevice will be selling. It will return False back to the caller of the service if there is a problem such as if the item they want is not their or that the next service in the line returned false back to this service. Once the item is found, it returns the items ID number which is comparible to a serial number. The last thing it will do is calculate the cost of the item. It bases the price one 1 stack or 64 of an item. If you want less or more, the price will be multipled or divided accordingly. It sends to the next service username, item ID, amount, and cost

The next part is the Credit Check Service. It takes in the info from the previous service but only needs the username and cost. The service checks the the amount of levels that the player has and subtracts the cost from it if the player has enought levels, otherwise it will return false back to the calling service. The levels or experiance the player has is retrieved from a binary data file. That file contians the all the data for the player for a given server. In order to abtain the players level, we had to decompresss and read the player.dat file and parse the hexidecimal representation, searching for a specific sequence of bytes that denotes the user's experiance level. If it all checks out, levels are taken from the player equal to the cost and the username, item ID and amound are sent to the next service. 

The last part of the service is the Distribution Service. It takes in the input from the calling service just like the others. It takes all the input and inserts it into a pre-built string. Using the pre-built string, It then exectes a BASH command to the server using Ruby's ability to issue Linux system commands. The command will give the user the items in-game.

#Add UI and GUI Info
